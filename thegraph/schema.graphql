#type _Schema_
#@fulltext(
#    name: "privateMessageSearch"
#    language: en
#    algorithm: rank
#    include: [{
#        entity: "PrivateMessage",
#        fields: [
#            { name: "text" },
#            { name: "from_address" },
#        ]
#    }]
#)
#
#@fulltext(
#    name: "roomMessageSearch"
#    language: en
#    algorithm: rank
#    include: [{
#        entity: "RoomMessage",
#        fields: [
#            { name: "text" },
#            { name: "room_id" },
#        ]
#    }]
#)

type _Schema_
@fulltext(
    name: "privateChatSearch"
    language: en
    algorithm: rank
    include: [{
        entity: "PrivateChat",
        fields: [
            { name: "id" },
        ]
    }]
)

type PrivateChat @entity {
    id: ID!
    last_message: PrivateMessage!
    is_removed: Boolean!,
    updated_at: Int!
}

type PrivateMessage @entity {
    id: ID!
    chat_id: PrivateChat!,
    from_user: User!
    to_user: User!
    from_address: String!
    to_address: String!
    reply_to_message: PrivateMessage
    text: String!
    created_at: Int!
    tx_hash: String!
    is_spam: Boolean!
    is_removed: Boolean!
    is_protected: Boolean!
}

type RoomChat @entity {
    id: ID!
    last_message: RoomMessage!
    is_removed: Boolean!,
    updated_at: Int!
}

type RoomMessage @entity {
    id: ID!
    from_user: User!
    from_address: String!
    reply_to_message: RoomMessage
    room_id: String!
    text: String!
    created_at: Int!
    tx_hash: String!
    is_spam: Boolean!
    is_removed: Boolean!
}

type User @entity {
    id: ID!
    media: String
}