type _Schema_
@fulltext(
    name: "privateMessageSearch"
    language: en
    algorithm: rank
    include: [{
        entity: "PrivateMessage",
        fields: [
            { name: "from_address" },
            { name: "to_address" },
        ]
    }]
)

@fulltext(
    name: "roomMessageSearch"
    language: en
    algorithm: rank
    include: [{
        entity: "RoomMessage",
        fields: [
            { name: "to_room" },
        ]
    }]
)

type PrivateMessage @entity {
    id: String!
    from_user: User!
    to_user: User!
    from_address: String!
    to_address: String!
    reply_to_message: PrivateMessage
    text: String!
    created_at: Int!
    tx_hash: String!
    is_spam: Boolean!
    is_removed: Boolean!
    is_protected: Boolean!
}

type RoomMessage @entity {
    id: String!
    from_user: User!
    from_address: String!
    reply_to_message: RoomMessage
    to_room: String!
    text: String!
    created_at: Int!
    tx_hash: String!
    is_spam: Boolean!
    is_removed: Boolean!
    is_protected: Boolean!
}

type User @entity {
    id: String!
    income_private: [PrivateMessage!]! @derivedFrom(field: "to_user")
    outcome_private: [PrivateMessage!]! @derivedFrom(field: "from_user")
    outcome_room: [RoomMessage!]! @derivedFrom(field: "from_user")
}